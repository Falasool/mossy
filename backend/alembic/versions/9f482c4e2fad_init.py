"""init

Revision ID: 9f482c4e2fad
Revises: 
Create Date: 2024-05-15 00:12:20.907458

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9f482c4e2fad'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_passkeys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('raw_id', sa.String(), nullable=False),
    sa.Column('credential_id', postgresql.BYTEA(), nullable=False),
    sa.Column('public_key', postgresql.BYTEA(), nullable=False),
    sa.Column('sign_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('device_type', sa.String(), nullable=True),
    sa.Column('annotate', sa.String(), nullable=True),
    sa.Column('backed_up', sa.Boolean(), nullable=True),
    sa.Column('transports', sa.String(), nullable=True),
    sa.Column('registed_user_agent', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('credential_id')
    )
    op.create_index(op.f('ix_auth_passkeys_raw_id'), 'auth_passkeys', ['raw_id'], unique=True)
    op.create_index(op.f('ix_auth_passkeys_user'), 'auth_passkeys', ['user'], unique=False)
    op.create_table('auth_permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('permission', sa.String(), nullable=False),
    sa.Column('operation_log_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_permissions_operation_log_id'), 'auth_permissions', ['operation_log_id'], unique=False)
    op.create_index(op.f('ix_auth_permissions_permission'), 'auth_permissions', ['permission'], unique=False)
    op.create_index(op.f('ix_auth_permissions_user'), 'auth_permissions', ['user'], unique=False)
    op.create_table('auth_registration_attempts',
    sa.Column('challenge', postgresql.BYTEA(), nullable=False),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('user_agent', sa.String(), nullable=False),
    sa.Column('access_address', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('challenge')
    )
    op.create_index(op.f('ix_auth_registration_attempts_user'), 'auth_registration_attempts', ['user'], unique=False)
    op.create_table('auth_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('related_passkey', sa.UUID(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_sessions_user'), 'auth_sessions', ['user'], unique=False)
    op.create_table('auth_user_register_process',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('finished_register', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('log_exceptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('node_id', sa.UUID(), nullable=True),
    sa.Column('worker_id', sa.UUID(), nullable=True),
    sa.Column('error_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('error_type', sa.String(), nullable=True),
    sa.Column('error_stack', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_log_exceptions_error_message'), 'log_exceptions', ['error_message'], unique=False)
    op.create_index(op.f('ix_log_exceptions_error_type'), 'log_exceptions', ['error_type'], unique=False)
    op.create_index(op.f('ix_log_exceptions_node_id'), 'log_exceptions', ['node_id'], unique=False)
    op.create_table('log_operations',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('operation_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('related_session', sa.UUID(), nullable=False),
    sa.Column('module', sa.String(), nullable=False),
    sa.Column('operation', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_log_operations_module'), 'log_operations', ['module'], unique=False)
    op.create_index(op.f('ix_log_operations_operation'), 'log_operations', ['operation'], unique=False)
    op.create_index(op.f('ix_log_operations_operation_time'), 'log_operations', ['operation_time'], unique=False)
    op.create_index(op.f('ix_log_operations_related_session'), 'log_operations', ['related_session'], unique=False)
    op.create_index(op.f('ix_log_operations_user'), 'log_operations', ['user'], unique=False)
    op.create_table('node_info',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('node_id', sa.UUID(), nullable=True),
    sa.Column('node_type', sa.Enum('fastapi', 'backgrounder', 'scheduler', name='nodetype'), nullable=True),
    sa.Column('cpus', sa.Integer(), nullable=True),
    sa.Column('mem_in_gb', sa.Float(), nullable=True),
    sa.Column('node_name', sa.String(), nullable=True),
    sa.Column('ipv4', sa.String(), nullable=True),
    sa.Column('ipv6', sa.String(), nullable=True),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('public_key', sa.String(), nullable=True),
    sa.Column('activated', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('node_id', 'node_type', name='uq_node_type')
    )
    op.create_index(op.f('ix_node_info_node_id'), 'node_info', ['node_id'], unique=False)
    op.create_table('system_config',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('user_config',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user', 'key', name='uq_user_key')
    )
    op.create_index(op.f('ix_user_config_key'), 'user_config', ['key'], unique=False)
    op.create_index(op.f('ix_user_config_user'), 'user_config', ['user'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_config_user'), table_name='user_config')
    op.drop_index(op.f('ix_user_config_key'), table_name='user_config')
    op.drop_table('user_config')
    op.drop_table('system_config')
    op.drop_index(op.f('ix_node_info_node_id'), table_name='node_info')
    op.drop_table('node_info')
    op.drop_index(op.f('ix_log_operations_user'), table_name='log_operations')
    op.drop_index(op.f('ix_log_operations_related_session'), table_name='log_operations')
    op.drop_index(op.f('ix_log_operations_operation_time'), table_name='log_operations')
    op.drop_index(op.f('ix_log_operations_operation'), table_name='log_operations')
    op.drop_index(op.f('ix_log_operations_module'), table_name='log_operations')
    op.drop_table('log_operations')
    op.drop_index(op.f('ix_log_exceptions_node_id'), table_name='log_exceptions')
    op.drop_index(op.f('ix_log_exceptions_error_type'), table_name='log_exceptions')
    op.drop_index(op.f('ix_log_exceptions_error_message'), table_name='log_exceptions')
    op.drop_table('log_exceptions')
    op.drop_table('auth_user_register_process')
    op.drop_index(op.f('ix_auth_sessions_user'), table_name='auth_sessions')
    op.drop_table('auth_sessions')
    op.drop_index(op.f('ix_auth_registration_attempts_user'), table_name='auth_registration_attempts')
    op.drop_table('auth_registration_attempts')
    op.drop_index(op.f('ix_auth_permissions_user'), table_name='auth_permissions')
    op.drop_index(op.f('ix_auth_permissions_permission'), table_name='auth_permissions')
    op.drop_index(op.f('ix_auth_permissions_operation_log_id'), table_name='auth_permissions')
    op.drop_table('auth_permissions')
    op.drop_index(op.f('ix_auth_passkeys_user'), table_name='auth_passkeys')
    op.drop_index(op.f('ix_auth_passkeys_raw_id'), table_name='auth_passkeys')
    op.drop_table('auth_passkeys')
    # ### end Alembic commands ###
